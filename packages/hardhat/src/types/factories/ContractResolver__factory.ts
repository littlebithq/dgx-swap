/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContractResolver,
  ContractResolverInterface,
} from "../ContractResolver";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "get_contract",
    outputs: [
      {
        name: "_contract",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_key",
        type: "bytes32",
      },
      {
        name: "_contract_address",
        type: "address",
      },
    ],
    name: "init_register_contract",
    outputs: [
      {
        name: "_success",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "unregister_contract",
    outputs: [
      {
        name: "_success",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "locked",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6060604052341561000f57600080fd5b6102728061001e6000396000f30060606040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f83acff146100725780638da5cb5b146100d9578063c0f6ef4a1461012e578063c8b56bda1461018c578063cf309012146101cb575b600080fd5b341561007d57600080fd5b6100976004808035600019169060200190919050506101f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100e457600080fd5b6100ec6101ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561013957600080fd5b61017260048080356000191690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610224565b604051808215151515815260200191505060405180910390f35b341561019757600080fd5b6101b160048080356000191690602001909190505061022c565b604051808215151515815260200191505060405180910390f35b34156101d657600080fd5b6101de610233565b604051808215151515815260200191505060405180910390f35b6000919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600092915050565b6000919050565b600060149054906101000a900460ff16815600a165627a7a72305820b86c590502a93b7f7f933f8c2ee69cc0b7dc20daf60f1e0cf9da9aa0b2f2dde10029";

export class ContractResolver__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractResolver> {
    return super.deploy(overrides || {}) as Promise<ContractResolver>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContractResolver {
    return super.attach(address) as ContractResolver;
  }
  connect(signer: Signer): ContractResolver__factory {
    return super.connect(signer) as ContractResolver__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractResolverInterface {
    return new utils.Interface(_abi) as ContractResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractResolver {
    return new Contract(address, _abi, signerOrProvider) as ContractResolver;
  }
}
